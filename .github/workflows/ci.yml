name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  pull-requests: read
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DISABLE_TELEMETRY: true
  BUN_TELEMETRY_DISABLED: 1

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ matrix.node-version }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ matrix.node-version }}-
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run TypeScript type checking
        run: bun run typecheck

      - name: Run Biome linter and formatter
        run: bun run check

      - name: Build project
        run: bun run build

      - name: Verify build output
        run: |
          if [ ! -f "dist/index.js" ]; then
            echo "Build output not found at dist/index.js"
            exit 1
          fi
          echo "✓ Build successful - dist/index.js exists"

      - name: Test MCP server startup
        run: |
          timeout 10s bun run start || true
          if [ $? -eq 124 ]; then
            echo "✓ MCP server started successfully (timeout expected)"
          else
            echo "✗ MCP server failed to start"
            exit 1
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit
        continue-on-error: true

  cross-platform:
    name: Cross-Platform Build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        run: bun run build

      - name: Test build output (Unix)
        if: runner.os != 'Windows'
        run: |
          if [ ! -f "dist/index.js" ]; then
            echo "Build failed - no output file"
            exit 1
          fi
          echo "✓ Build successful on ${{ matrix.os }}"

      - name: Test build output (Windows)
        if: runner.os == 'Windows'
        run: |
          if (!(Test-Path "dist/index.js")) {
            Write-Error "Build failed - no output file"
            exit 1
          }
          Write-Output "✓ Build successful on ${{ matrix.os }}"

